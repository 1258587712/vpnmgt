#!/bin/bash
crondir=$(dirname ${0})
if [ "$crondir" == "." ] ;then
    crondir=$(pwd)
fi
vpnmgt_install(){
    echo "开始安装 vpnmgtd"

    tmpdir='/opt/soft/'    
    [ -e ${tmpdir} ] && cd ${tmpdir} || mkdir -p ${tmpdir} && cd ${tmpdir} 
    if [ $(rpm -aq |grep -c 'zip') -eq 0 ];then
        run_cmd 'yum install zip -y'
    fi
    if [ $(rpm -aq |grep -c 'wget') -eq 0 ];then
        run_cmd 'yum install wget -y'
    fi
    if [ $(rpm -aq |grep -c 'curl') -eq 0 ];then
        run_cmd 'yum install curl -y'
    fi
    #安装Python-2.7.15

    if [ $(rpm -aq |grep -Ec '^python-2.7') -eq 0 ] ;then 
        if [ ! -e Python-2.7.15.tgz ];then
            wget -q https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz || wget -q https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz --no-check-certificate         
        
        fi
        
        run_cmd 'tar zxf Python-2.7.15.tgz'
        cd Python-2.7.15
        run_cmd './configure'
        run_cmd 'make'
        run_cmd 'make install'
        cd ..
        mv -f /usr/bin/python /usr/bin/python${python_ver}
        ln -s /usr/local/bin/python2.7 /usr/bin/python
    fi 
    if [ $(rpm -aq |grep -c 'python-setuptools') -eq 0 ];then
        run_cmd 'yum install python-setuptools -y'
    fi
    #if [ $(rpm -aq |grep -c 'python2-pip') -eq 0 ];then
    if [ ! -e /usr/bin/pip ];then
        #run_cmd 'yum install python2-pip -y'
        run_cmd 'curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py'
        run_cmd 'python get-pip.py'
    fi
    if [ $(rpm -aq |grep -c 'mysql-community-release-el7-5.noarch') -eq 0 ];then
        run_cmd 'rpm -ivh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm'
    fi
    if [ $(rpm -aq |grep -Ec 'mysql-community-server|mysql-community-client|mysql-community-libs|mysql-community-common') -lt 4 ];then
        run_cmd 'yum -y install mysql-community-server'          
    fi
    run_cmd 'systemctl restart mysqld.service'  
    
    run_cmd 'pip install django==1.9.13 >/dev/null'
    run_cmd 'pip install django-suit==0.2.25 >/dev/null'
    #run_cmd 'pip install MySQLdb'
    run_cmd 'pip install pymysql >/dev/null'
    run_cmd 'pip install paramiko >/dev/null'  


    
    run_cmd 'mysql -e "'"CREATE DATABASE IF NOT EXISTS vpnmgt COLLATE = 'utf8_general_ci' CHARACTER SET = 'utf8';"'"'
    run_cmd 'mysql -e "'"GRANT ALL ON vpnmgt.* TO 'vpnmgt'@'%' IDENTIFIED BY 'vpnmgt';"'"'
    run_cmd 'mysql -e "'"GRANT ALL ON vpnmgt.* TO 'vpnmgt'@'localhost' IDENTIFIED BY 'vpnmgt';"'"'
    
    run_cmd "mysql -e 'show databases;' |grep vpnmgt"
    run_cmd """tzselect<<EOF
5
9
1
1
yes
EOF"""
    \cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
    
    echo -e "################################################\ninstall OVER"
    
}

run_cmd(){
    #echo $1
    echo "$1" |bash
    #$1
    stats=$?
    if [ ${stats} -ne 0 ] ;then
        echo -e "Command is Error by: ${stats} \n$1"
        exit 1
    fi 
}
set_cron(){
    case $1 in 
        start)
            if [ `crontab -l |grep -c 'http://127.0.0.1:8081/check_vpn'` -eq 0 ];then 
                echo '*/2 * * * * curl http://127.0.0.1:8081/check_vpn' >>/var/spool/cron/root
            fi
            if [ `crontab -l |grep -c 'curl http://127.0.0.1:8081/get_vpn_log'` -eq 0 ];then 
                echo '*/5 * * * * curl http://127.0.0.1:8081/get_vpn_log' >>/var/spool/cron/root
            fi    
  
            
        ;;
        stop)
            if [ `crontab -l |grep -c 'http://127.0.0.1:8081/check_vpn'` -gt 0 ];then 
                sed -i '/http:\/\/127.0.0.1:8081\/check_vpn/d' /var/spool/cron/root
            fi
            if [ `crontab -l |grep -c 'curl http://127.0.0.1:8081/get_vpn_log'` -gt 0 ];then 
                sed -i '/http:\/\/127.0.0.1:8081\/get_vpn_log/d' /var/spool/cron/root
            fi  
            
            
        ;;
    esac
    
}

start_app(){
    nohup python ${crondir}/manage.py runserver 0.0.0.0:8081 >${crondir}/manage.log 2>&1 &
    
    set_cron start
}
stop_app(){
    pid=`echo $(ps -ef |grep "${crondir}/manage.py"  |grep -v grep |awk '{print $2}')` 
    #echo $pid    
    if [ ${#pid} -gt 0 ];then
        run_cmd "kill -9 $pid"
    fi
    set_cron stop
}
update_db(){
    echo "python ${crondir}/manage.py makemigrations" 
    run_cmd "python ${crondir}/manage.py makemigrations" 
    
    echo "python ${crondir}/manage.py migrate"
    run_cmd "python ${crondir}/manage.py migrate"
}

if [ $# -eq 1 ];then
    cd ${crondir} 
    #echo ${crondir} 

    #run_cmd 'systemctl restart vpnmgtd' 
    case $1 in        
        install)
            vpnmgt_install
            update_db
        ;;         
        start)
            start_app  
            
        ;;
        update)
            update_db
        ;;
        stop)        
            stop_app
        ;;
        restart) 
            stop_app
            sleep 1
            start_app
            
        ;;
        *)        
            echo -e "Usage:\n$0 [install|start|stop|restart]"
        ;;
    esac   
else
    echo -e "Usage:\n$0 [install|start|stop|restart]"
fi







